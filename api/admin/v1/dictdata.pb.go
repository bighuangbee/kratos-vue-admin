// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: dictdata.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateDictDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictType  string `protobuf:"bytes,1,opt,name=dictType,proto3" json:"dictType,omitempty"`
	DictLabel string `protobuf:"bytes,2,opt,name=dictLabel,proto3" json:"dictLabel,omitempty"`
	DictValue string `protobuf:"bytes,3,opt,name=dictValue,proto3" json:"dictValue,omitempty"`
	DictSort  uint32 `protobuf:"varint,4,opt,name=dictSort,proto3" json:"dictSort,omitempty"`
	Status    int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Remark    string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *CreateDictDataRequest) Reset() {
	*x = CreateDictDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictdata_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDictDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDictDataRequest) ProtoMessage() {}

func (x *CreateDictDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictdata_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDictDataRequest.ProtoReflect.Descriptor instead.
func (*CreateDictDataRequest) Descriptor() ([]byte, []int) {
	return file_dictdata_proto_rawDescGZIP(), []int{0}
}

func (x *CreateDictDataRequest) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *CreateDictDataRequest) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *CreateDictDataRequest) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *CreateDictDataRequest) GetDictSort() uint32 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *CreateDictDataRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateDictDataRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type CreateDictDataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateDictDataReply) Reset() {
	*x = CreateDictDataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictdata_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDictDataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDictDataReply) ProtoMessage() {}

func (x *CreateDictDataReply) ProtoReflect() protoreflect.Message {
	mi := &file_dictdata_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDictDataReply.ProtoReflect.Descriptor instead.
func (*CreateDictDataReply) Descriptor() ([]byte, []int) {
	return file_dictdata_proto_rawDescGZIP(), []int{1}
}

type UpdateDictDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictCode   int64                  `protobuf:"varint,1,opt,name=dictCode,proto3" json:"dictCode,omitempty"`
	DictSort   int32                  `protobuf:"varint,2,opt,name=dictSort,proto3" json:"dictSort,omitempty"`
	DictLabel  string                 `protobuf:"bytes,3,opt,name=dictLabel,proto3" json:"dictLabel,omitempty"`
	DictValue  string                 `protobuf:"bytes,4,opt,name=dictValue,proto3" json:"dictValue,omitempty"`
	DictType   string                 `protobuf:"bytes,5,opt,name=dictType,proto3" json:"dictType,omitempty"`
	Status     int32                  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	CssClass   string                 `protobuf:"bytes,7,opt,name=cssClass,proto3" json:"cssClass,omitempty"`
	ListClass  string                 `protobuf:"bytes,8,opt,name=listClass,proto3" json:"listClass,omitempty"`
	IsDefault  string                 `protobuf:"bytes,9,opt,name=isDefault,proto3" json:"isDefault,omitempty"`
	CreateBy   string                 `protobuf:"bytes,10,opt,name=createBy,proto3" json:"createBy,omitempty"`
	UpdateBy   string                 `protobuf:"bytes,11,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	Remark     string                 `protobuf:"bytes,12,opt,name=remark,proto3" json:"remark,omitempty"`
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *UpdateDictDataRequest) Reset() {
	*x = UpdateDictDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictdata_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDictDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDictDataRequest) ProtoMessage() {}

func (x *UpdateDictDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictdata_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDictDataRequest.ProtoReflect.Descriptor instead.
func (*UpdateDictDataRequest) Descriptor() ([]byte, []int) {
	return file_dictdata_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateDictDataRequest) GetDictCode() int64 {
	if x != nil {
		return x.DictCode
	}
	return 0
}

func (x *UpdateDictDataRequest) GetDictSort() int32 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *UpdateDictDataRequest) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *UpdateDictDataRequest) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *UpdateDictDataRequest) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *UpdateDictDataRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateDictDataRequest) GetCssClass() string {
	if x != nil {
		return x.CssClass
	}
	return ""
}

func (x *UpdateDictDataRequest) GetListClass() string {
	if x != nil {
		return x.ListClass
	}
	return ""
}

func (x *UpdateDictDataRequest) GetIsDefault() string {
	if x != nil {
		return x.IsDefault
	}
	return ""
}

func (x *UpdateDictDataRequest) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *UpdateDictDataRequest) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *UpdateDictDataRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdateDictDataRequest) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *UpdateDictDataRequest) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

type UpdateDictDataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictCode int64 `protobuf:"varint,1,opt,name=dictCode,proto3" json:"dictCode,omitempty"`
}

func (x *UpdateDictDataReply) Reset() {
	*x = UpdateDictDataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictdata_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDictDataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDictDataReply) ProtoMessage() {}

func (x *UpdateDictDataReply) ProtoReflect() protoreflect.Message {
	mi := &file_dictdata_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDictDataReply.ProtoReflect.Descriptor instead.
func (*UpdateDictDataReply) Descriptor() ([]byte, []int) {
	return file_dictdata_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateDictDataReply) GetDictCode() int64 {
	if x != nil {
		return x.DictCode
	}
	return 0
}

type DeleteDictDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictCode int64 `protobuf:"varint,1,opt,name=dictCode,proto3" json:"dictCode,omitempty"`
}

func (x *DeleteDictDataRequest) Reset() {
	*x = DeleteDictDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictdata_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDictDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDictDataRequest) ProtoMessage() {}

func (x *DeleteDictDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictdata_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDictDataRequest.ProtoReflect.Descriptor instead.
func (*DeleteDictDataRequest) Descriptor() ([]byte, []int) {
	return file_dictdata_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteDictDataRequest) GetDictCode() int64 {
	if x != nil {
		return x.DictCode
	}
	return 0
}

type DeleteDictDataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictCode int64 `protobuf:"varint,1,opt,name=dictCode,proto3" json:"dictCode,omitempty"`
}

func (x *DeleteDictDataReply) Reset() {
	*x = DeleteDictDataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictdata_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDictDataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDictDataReply) ProtoMessage() {}

func (x *DeleteDictDataReply) ProtoReflect() protoreflect.Message {
	mi := &file_dictdata_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDictDataReply.ProtoReflect.Descriptor instead.
func (*DeleteDictDataReply) Descriptor() ([]byte, []int) {
	return file_dictdata_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteDictDataReply) GetDictCode() int64 {
	if x != nil {
		return x.DictCode
	}
	return 0
}

type GetDictDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictCode int64 `protobuf:"varint,1,opt,name=dictCode,proto3" json:"dictCode,omitempty"`
}

func (x *GetDictDataRequest) Reset() {
	*x = GetDictDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictdata_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDictDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDictDataRequest) ProtoMessage() {}

func (x *GetDictDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictdata_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDictDataRequest.ProtoReflect.Descriptor instead.
func (*GetDictDataRequest) Descriptor() ([]byte, []int) {
	return file_dictdata_proto_rawDescGZIP(), []int{6}
}

func (x *GetDictDataRequest) GetDictCode() int64 {
	if x != nil {
		return x.DictCode
	}
	return 0
}

type GetDictDataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictCode int64 `protobuf:"varint,1,opt,name=dictCode,proto3" json:"dictCode,omitempty"`
}

func (x *GetDictDataReply) Reset() {
	*x = GetDictDataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictdata_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDictDataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDictDataReply) ProtoMessage() {}

func (x *GetDictDataReply) ProtoReflect() protoreflect.Message {
	mi := &file_dictdata_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDictDataReply.ProtoReflect.Descriptor instead.
func (*GetDictDataReply) Descriptor() ([]byte, []int) {
	return file_dictdata_proto_rawDescGZIP(), []int{7}
}

func (x *GetDictDataReply) GetDictCode() int64 {
	if x != nil {
		return x.DictCode
	}
	return 0
}

type ListDictDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum   int32  `protobuf:"varint,1,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	PageSize  int32  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Status    int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	DictType  string `protobuf:"bytes,4,opt,name=dictType,proto3" json:"dictType,omitempty"`
	DictLabel string `protobuf:"bytes,5,opt,name=dictLabel,proto3" json:"dictLabel,omitempty"`
}

func (x *ListDictDataRequest) Reset() {
	*x = ListDictDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictdata_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDictDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDictDataRequest) ProtoMessage() {}

func (x *ListDictDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictdata_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDictDataRequest.ProtoReflect.Descriptor instead.
func (*ListDictDataRequest) Descriptor() ([]byte, []int) {
	return file_dictdata_proto_rawDescGZIP(), []int{8}
}

func (x *ListDictDataRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListDictDataRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDictDataRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ListDictDataRequest) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *ListDictDataRequest) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

type ListDictDataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    int32              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	PageNum  int32              `protobuf:"varint,2,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	PageSize int32              `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	List     []*DictDataContent `protobuf:"bytes,4,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListDictDataReply) Reset() {
	*x = ListDictDataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictdata_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDictDataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDictDataReply) ProtoMessage() {}

func (x *ListDictDataReply) ProtoReflect() protoreflect.Message {
	mi := &file_dictdata_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDictDataReply.ProtoReflect.Descriptor instead.
func (*ListDictDataReply) Descriptor() ([]byte, []int) {
	return file_dictdata_proto_rawDescGZIP(), []int{9}
}

func (x *ListDictDataReply) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListDictDataReply) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListDictDataReply) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDictDataReply) GetList() []*DictDataContent {
	if x != nil {
		return x.List
	}
	return nil
}

type DictDataContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictCode   uint32                 `protobuf:"varint,1,opt,name=dictCode,proto3" json:"dictCode,omitempty"`
	DictSort   uint32                 `protobuf:"varint,2,opt,name=dictSort,proto3" json:"dictSort,omitempty"`
	DictLabel  string                 `protobuf:"bytes,3,opt,name=dictLabel,proto3" json:"dictLabel,omitempty"`
	DictValue  string                 `protobuf:"bytes,4,opt,name=dictValue,proto3" json:"dictValue,omitempty"`
	DictType   string                 `protobuf:"bytes,5,opt,name=dictType,proto3" json:"dictType,omitempty"`
	Status     int32                  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	CssClass   string                 `protobuf:"bytes,7,opt,name=cssClass,proto3" json:"cssClass,omitempty"`
	ListClass  string                 `protobuf:"bytes,8,opt,name=listClass,proto3" json:"listClass,omitempty"`
	IsDefault  string                 `protobuf:"bytes,9,opt,name=isDefault,proto3" json:"isDefault,omitempty"`
	CreateBy   string                 `protobuf:"bytes,10,opt,name=createBy,proto3" json:"createBy,omitempty"`
	UpdateBy   string                 `protobuf:"bytes,11,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	Remark     string                 `protobuf:"bytes,12,opt,name=remark,proto3" json:"remark,omitempty"`
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *DictDataContent) Reset() {
	*x = DictDataContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictdata_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictDataContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictDataContent) ProtoMessage() {}

func (x *DictDataContent) ProtoReflect() protoreflect.Message {
	mi := &file_dictdata_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictDataContent.ProtoReflect.Descriptor instead.
func (*DictDataContent) Descriptor() ([]byte, []int) {
	return file_dictdata_proto_rawDescGZIP(), []int{10}
}

func (x *DictDataContent) GetDictCode() uint32 {
	if x != nil {
		return x.DictCode
	}
	return 0
}

func (x *DictDataContent) GetDictSort() uint32 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *DictDataContent) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *DictDataContent) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *DictDataContent) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *DictDataContent) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DictDataContent) GetCssClass() string {
	if x != nil {
		return x.CssClass
	}
	return ""
}

func (x *DictDataContent) GetListClass() string {
	if x != nil {
		return x.ListClass
	}
	return ""
}

func (x *DictDataContent) GetIsDefault() string {
	if x != nil {
		return x.IsDefault
	}
	return ""
}

func (x *DictDataContent) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *DictDataContent) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *DictDataContent) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *DictDataContent) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *DictDataContent) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

var File_dictdata_proto protoreflect.FileDescriptor

var file_dictdata_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x64, 0x69, 0x63, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbb, 0x01,
	0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x15, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0xdf, 0x03, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74,
	0x53, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74,
	0x53, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x3a, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x31, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69,
	0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64,
	0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x33, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x31, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x30, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x2e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x9d, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x22, 0x92, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xd9, 0x03, 0x0a, 0x0f, 0x44, 0x69, 0x63, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69,
	0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x69,
	0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x53, 0x6f,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x53, 0x6f,
	0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x32, 0xea, 0x04, 0x0a, 0x08, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x72, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x76, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x76, 0x0a, 0x0e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a,
	0x1a, 0x11, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x7e, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x63,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x2a, 0x1c, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x64,
	0x69, 0x63, 0x74, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x7b, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x7d, 0x12, 0x7a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f,
	0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x7b, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x7d, 0x42,
	0x19, 0x5a, 0x17, 0x66, 0x65, 0x6e, 0x67, 0x79, 0x69, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_dictdata_proto_rawDescOnce sync.Once
	file_dictdata_proto_rawDescData = file_dictdata_proto_rawDesc
)

func file_dictdata_proto_rawDescGZIP() []byte {
	file_dictdata_proto_rawDescOnce.Do(func() {
		file_dictdata_proto_rawDescData = protoimpl.X.CompressGZIP(file_dictdata_proto_rawDescData)
	})
	return file_dictdata_proto_rawDescData
}

var file_dictdata_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_dictdata_proto_goTypes = []interface{}{
	(*CreateDictDataRequest)(nil), // 0: api.admin.v1.CreateDictDataRequest
	(*CreateDictDataReply)(nil),   // 1: api.admin.v1.CreateDictDataReply
	(*UpdateDictDataRequest)(nil), // 2: api.admin.v1.UpdateDictDataRequest
	(*UpdateDictDataReply)(nil),   // 3: api.admin.v1.UpdateDictDataReply
	(*DeleteDictDataRequest)(nil), // 4: api.admin.v1.DeleteDictDataRequest
	(*DeleteDictDataReply)(nil),   // 5: api.admin.v1.DeleteDictDataReply
	(*GetDictDataRequest)(nil),    // 6: api.admin.v1.GetDictDataRequest
	(*GetDictDataReply)(nil),      // 7: api.admin.v1.GetDictDataReply
	(*ListDictDataRequest)(nil),   // 8: api.admin.v1.ListDictDataRequest
	(*ListDictDataReply)(nil),     // 9: api.admin.v1.ListDictDataReply
	(*DictDataContent)(nil),       // 10: api.admin.v1.DictDataContent
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
}
var file_dictdata_proto_depIdxs = []int32{
	11, // 0: api.admin.v1.UpdateDictDataRequest.createTime:type_name -> google.protobuf.Timestamp
	11, // 1: api.admin.v1.UpdateDictDataRequest.updateTime:type_name -> google.protobuf.Timestamp
	10, // 2: api.admin.v1.ListDictDataReply.list:type_name -> api.admin.v1.DictDataContent
	11, // 3: api.admin.v1.DictDataContent.createTime:type_name -> google.protobuf.Timestamp
	11, // 4: api.admin.v1.DictDataContent.updateTime:type_name -> google.protobuf.Timestamp
	8,  // 5: api.admin.v1.DictData.ListDictData:input_type -> api.admin.v1.ListDictDataRequest
	0,  // 6: api.admin.v1.DictData.CreateDictData:input_type -> api.admin.v1.CreateDictDataRequest
	2,  // 7: api.admin.v1.DictData.UpdateDictData:input_type -> api.admin.v1.UpdateDictDataRequest
	4,  // 8: api.admin.v1.DictData.DeleteDictData:input_type -> api.admin.v1.DeleteDictDataRequest
	6,  // 9: api.admin.v1.DictData.GetDictData:input_type -> api.admin.v1.GetDictDataRequest
	9,  // 10: api.admin.v1.DictData.ListDictData:output_type -> api.admin.v1.ListDictDataReply
	1,  // 11: api.admin.v1.DictData.CreateDictData:output_type -> api.admin.v1.CreateDictDataReply
	3,  // 12: api.admin.v1.DictData.UpdateDictData:output_type -> api.admin.v1.UpdateDictDataReply
	5,  // 13: api.admin.v1.DictData.DeleteDictData:output_type -> api.admin.v1.DeleteDictDataReply
	7,  // 14: api.admin.v1.DictData.GetDictData:output_type -> api.admin.v1.GetDictDataReply
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_dictdata_proto_init() }
func file_dictdata_proto_init() {
	if File_dictdata_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dictdata_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDictDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictdata_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDictDataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictdata_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDictDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictdata_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDictDataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictdata_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDictDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictdata_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDictDataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictdata_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDictDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictdata_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDictDataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictdata_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDictDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictdata_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDictDataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictdata_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictDataContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dictdata_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dictdata_proto_goTypes,
		DependencyIndexes: file_dictdata_proto_depIdxs,
		MessageInfos:      file_dictdata_proto_msgTypes,
	}.Build()
	File_dictdata_proto = out.File
	file_dictdata_proto_rawDesc = nil
	file_dictdata_proto_goTypes = nil
	file_dictdata_proto_depIdxs = nil
}
