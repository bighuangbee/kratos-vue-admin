// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: dicttype.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateDictTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictName string `protobuf:"bytes,1,opt,name=dictName,proto3" json:"dictName,omitempty"`
	DictType string `protobuf:"bytes,2,opt,name=dictType,proto3" json:"dictType,omitempty"`
	Status   int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Remark   string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *CreateDictTypeRequest) Reset() {
	*x = CreateDictTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dicttype_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDictTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDictTypeRequest) ProtoMessage() {}

func (x *CreateDictTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dicttype_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDictTypeRequest.ProtoReflect.Descriptor instead.
func (*CreateDictTypeRequest) Descriptor() ([]byte, []int) {
	return file_dicttype_proto_rawDescGZIP(), []int{0}
}

func (x *CreateDictTypeRequest) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *CreateDictTypeRequest) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *CreateDictTypeRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateDictTypeRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type CreateDictTypeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateDictTypeReply) Reset() {
	*x = CreateDictTypeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dicttype_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDictTypeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDictTypeReply) ProtoMessage() {}

func (x *CreateDictTypeReply) ProtoReflect() protoreflect.Message {
	mi := &file_dicttype_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDictTypeReply.ProtoReflect.Descriptor instead.
func (*CreateDictTypeReply) Descriptor() ([]byte, []int) {
	return file_dicttype_proto_rawDescGZIP(), []int{1}
}

type UpdateDictTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictId     uint32                 `protobuf:"varint,1,opt,name=dictId,proto3" json:"dictId,omitempty"`
	DictName   string                 `protobuf:"bytes,2,opt,name=dictName,proto3" json:"dictName,omitempty"`
	DictType   string                 `protobuf:"bytes,3,opt,name=dictType,proto3" json:"dictType,omitempty"`
	Status     int32                  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	CreateBy   string                 `protobuf:"bytes,5,opt,name=createBy,proto3" json:"createBy,omitempty"`
	UpdateBy   string                 `protobuf:"bytes,6,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	Remark     string                 `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *UpdateDictTypeRequest) Reset() {
	*x = UpdateDictTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dicttype_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDictTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDictTypeRequest) ProtoMessage() {}

func (x *UpdateDictTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dicttype_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDictTypeRequest.ProtoReflect.Descriptor instead.
func (*UpdateDictTypeRequest) Descriptor() ([]byte, []int) {
	return file_dicttype_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateDictTypeRequest) GetDictId() uint32 {
	if x != nil {
		return x.DictId
	}
	return 0
}

func (x *UpdateDictTypeRequest) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *UpdateDictTypeRequest) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *UpdateDictTypeRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateDictTypeRequest) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *UpdateDictTypeRequest) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *UpdateDictTypeRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdateDictTypeRequest) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *UpdateDictTypeRequest) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

type UpdateDictTypeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictId int64 `protobuf:"varint,1,opt,name=dictId,proto3" json:"dictId,omitempty"`
}

func (x *UpdateDictTypeReply) Reset() {
	*x = UpdateDictTypeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dicttype_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDictTypeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDictTypeReply) ProtoMessage() {}

func (x *UpdateDictTypeReply) ProtoReflect() protoreflect.Message {
	mi := &file_dicttype_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDictTypeReply.ProtoReflect.Descriptor instead.
func (*UpdateDictTypeReply) Descriptor() ([]byte, []int) {
	return file_dicttype_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateDictTypeReply) GetDictId() int64 {
	if x != nil {
		return x.DictId
	}
	return 0
}

type DeleteDictTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictId int64 `protobuf:"varint,1,opt,name=dictId,proto3" json:"dictId,omitempty"`
}

func (x *DeleteDictTypeRequest) Reset() {
	*x = DeleteDictTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dicttype_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDictTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDictTypeRequest) ProtoMessage() {}

func (x *DeleteDictTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dicttype_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDictTypeRequest.ProtoReflect.Descriptor instead.
func (*DeleteDictTypeRequest) Descriptor() ([]byte, []int) {
	return file_dicttype_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteDictTypeRequest) GetDictId() int64 {
	if x != nil {
		return x.DictId
	}
	return 0
}

type DeleteDictTypeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictId int64 `protobuf:"varint,1,opt,name=dictId,proto3" json:"dictId,omitempty"`
}

func (x *DeleteDictTypeReply) Reset() {
	*x = DeleteDictTypeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dicttype_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDictTypeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDictTypeReply) ProtoMessage() {}

func (x *DeleteDictTypeReply) ProtoReflect() protoreflect.Message {
	mi := &file_dicttype_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDictTypeReply.ProtoReflect.Descriptor instead.
func (*DeleteDictTypeReply) Descriptor() ([]byte, []int) {
	return file_dicttype_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteDictTypeReply) GetDictId() int64 {
	if x != nil {
		return x.DictId
	}
	return 0
}

type GetDictTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictId int64 `protobuf:"varint,1,opt,name=dictId,proto3" json:"dictId,omitempty"`
}

func (x *GetDictTypeRequest) Reset() {
	*x = GetDictTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dicttype_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDictTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDictTypeRequest) ProtoMessage() {}

func (x *GetDictTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dicttype_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDictTypeRequest.ProtoReflect.Descriptor instead.
func (*GetDictTypeRequest) Descriptor() ([]byte, []int) {
	return file_dicttype_proto_rawDescGZIP(), []int{6}
}

func (x *GetDictTypeRequest) GetDictId() int64 {
	if x != nil {
		return x.DictId
	}
	return 0
}

type GetDictTypeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictId int64 `protobuf:"varint,1,opt,name=dictId,proto3" json:"dictId,omitempty"`
}

func (x *GetDictTypeReply) Reset() {
	*x = GetDictTypeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dicttype_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDictTypeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDictTypeReply) ProtoMessage() {}

func (x *GetDictTypeReply) ProtoReflect() protoreflect.Message {
	mi := &file_dicttype_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDictTypeReply.ProtoReflect.Descriptor instead.
func (*GetDictTypeReply) Descriptor() ([]byte, []int) {
	return file_dicttype_proto_rawDescGZIP(), []int{7}
}

func (x *GetDictTypeReply) GetDictId() int64 {
	if x != nil {
		return x.DictId
	}
	return 0
}

type ListDictTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictName string `protobuf:"bytes,1,opt,name=dictName,proto3" json:"dictName,omitempty"`
	DictType string `protobuf:"bytes,2,opt,name=dictType,proto3" json:"dictType,omitempty"`
	Status   int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	PageNum  int32  `protobuf:"varint,4,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	PageSize int32  `protobuf:"varint,5,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *ListDictTypeRequest) Reset() {
	*x = ListDictTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dicttype_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDictTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDictTypeRequest) ProtoMessage() {}

func (x *ListDictTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dicttype_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDictTypeRequest.ProtoReflect.Descriptor instead.
func (*ListDictTypeRequest) Descriptor() ([]byte, []int) {
	return file_dicttype_proto_rawDescGZIP(), []int{8}
}

func (x *ListDictTypeRequest) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *ListDictTypeRequest) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *ListDictTypeRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ListDictTypeRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListDictTypeRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListDictTypeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    int32              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	PageNum  int32              `protobuf:"varint,2,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	PageSize int32              `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Data     []*DictTypeContent `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListDictTypeReply) Reset() {
	*x = ListDictTypeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dicttype_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDictTypeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDictTypeReply) ProtoMessage() {}

func (x *ListDictTypeReply) ProtoReflect() protoreflect.Message {
	mi := &file_dicttype_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDictTypeReply.ProtoReflect.Descriptor instead.
func (*ListDictTypeReply) Descriptor() ([]byte, []int) {
	return file_dicttype_proto_rawDescGZIP(), []int{9}
}

func (x *ListDictTypeReply) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListDictTypeReply) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListDictTypeReply) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDictTypeReply) GetData() []*DictTypeContent {
	if x != nil {
		return x.Data
	}
	return nil
}

type DictTypeContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictId     uint32                 `protobuf:"varint,1,opt,name=dictId,proto3" json:"dictId,omitempty"`
	DictName   string                 `protobuf:"bytes,2,opt,name=dictName,proto3" json:"dictName,omitempty"`
	DictType   string                 `protobuf:"bytes,3,opt,name=dictType,proto3" json:"dictType,omitempty"`
	Status     int32                  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	CreateBy   string                 `protobuf:"bytes,5,opt,name=createBy,proto3" json:"createBy,omitempty"`
	UpdateBy   string                 `protobuf:"bytes,6,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	Remark     string                 `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *DictTypeContent) Reset() {
	*x = DictTypeContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dicttype_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictTypeContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictTypeContent) ProtoMessage() {}

func (x *DictTypeContent) ProtoReflect() protoreflect.Message {
	mi := &file_dicttype_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictTypeContent.ProtoReflect.Descriptor instead.
func (*DictTypeContent) Descriptor() ([]byte, []int) {
	return file_dicttype_proto_rawDescGZIP(), []int{10}
}

func (x *DictTypeContent) GetDictId() uint32 {
	if x != nil {
		return x.DictId
	}
	return 0
}

func (x *DictTypeContent) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *DictTypeContent) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *DictTypeContent) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DictTypeContent) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *DictTypeContent) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *DictTypeContent) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *DictTypeContent) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *DictTypeContent) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

type GetDesignateDictTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictIDs []string `protobuf:"bytes,1,rep,name=dictIDs,proto3" json:"dictIDs,omitempty"`
}

func (x *GetDesignateDictTypesRequest) Reset() {
	*x = GetDesignateDictTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dicttype_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDesignateDictTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDesignateDictTypesRequest) ProtoMessage() {}

func (x *GetDesignateDictTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dicttype_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDesignateDictTypesRequest.ProtoReflect.Descriptor instead.
func (*GetDesignateDictTypesRequest) Descriptor() ([]byte, []int) {
	return file_dicttype_proto_rawDescGZIP(), []int{11}
}

func (x *GetDesignateDictTypesRequest) GetDictIDs() []string {
	if x != nil {
		return x.DictIDs
	}
	return nil
}

type GetDesignateDictTypesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDesignateDictTypesReply) Reset() {
	*x = GetDesignateDictTypesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dicttype_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDesignateDictTypesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDesignateDictTypesReply) ProtoMessage() {}

func (x *GetDesignateDictTypesReply) ProtoReflect() protoreflect.Message {
	mi := &file_dicttype_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDesignateDictTypesReply.ProtoReflect.Descriptor instead.
func (*GetDesignateDictTypesReply) Descriptor() ([]byte, []int) {
	return file_dicttype_proto_rawDescGZIP(), []int{12}
}

var File_dicttype_proto protoreflect.FileDescriptor

var file_dicttype_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x64, 0x69, 0x63, 0x74, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7f, 0x0a,
	0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x15,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xc7, 0x02, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x2d, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x22, 0x2f,
	0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x63, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x22,
	0x2d, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x22, 0x2c,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x22, 0x2a, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc1, 0x02, 0x0a, 0x0f,
	0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x38, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x65, 0x44,
	0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x69, 0x63, 0x74, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x64, 0x69, 0x63, 0x74, 0x49, 0x44, 0x73, 0x22, 0x1c, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32, 0xe1, 0x04, 0x0a, 0x08, 0x44, 0x69, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x72, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18,
	0x12, 0x16, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x76, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x76, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x16, 0x3a, 0x01, 0x2a, 0x1a, 0x11, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x64,
	0x69, 0x63, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x7c, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x2a, 0x1a, 0x2f, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x7b, 0x64,
	0x69, 0x63, 0x74, 0x49, 0x64, 0x7d, 0x12, 0x73, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x44, 0x69, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12,
	0x1a, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x2f, 0x7b, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x7d, 0x42, 0x19, 0x5a, 0x17, 0x66,
	0x65, 0x6e, 0x67, 0x79, 0x69, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dicttype_proto_rawDescOnce sync.Once
	file_dicttype_proto_rawDescData = file_dicttype_proto_rawDesc
)

func file_dicttype_proto_rawDescGZIP() []byte {
	file_dicttype_proto_rawDescOnce.Do(func() {
		file_dicttype_proto_rawDescData = protoimpl.X.CompressGZIP(file_dicttype_proto_rawDescData)
	})
	return file_dicttype_proto_rawDescData
}

var file_dicttype_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_dicttype_proto_goTypes = []interface{}{
	(*CreateDictTypeRequest)(nil),        // 0: api.admin.v1.CreateDictTypeRequest
	(*CreateDictTypeReply)(nil),          // 1: api.admin.v1.CreateDictTypeReply
	(*UpdateDictTypeRequest)(nil),        // 2: api.admin.v1.UpdateDictTypeRequest
	(*UpdateDictTypeReply)(nil),          // 3: api.admin.v1.UpdateDictTypeReply
	(*DeleteDictTypeRequest)(nil),        // 4: api.admin.v1.DeleteDictTypeRequest
	(*DeleteDictTypeReply)(nil),          // 5: api.admin.v1.DeleteDictTypeReply
	(*GetDictTypeRequest)(nil),           // 6: api.admin.v1.GetDictTypeRequest
	(*GetDictTypeReply)(nil),             // 7: api.admin.v1.GetDictTypeReply
	(*ListDictTypeRequest)(nil),          // 8: api.admin.v1.ListDictTypeRequest
	(*ListDictTypeReply)(nil),            // 9: api.admin.v1.ListDictTypeReply
	(*DictTypeContent)(nil),              // 10: api.admin.v1.DictTypeContent
	(*GetDesignateDictTypesRequest)(nil), // 11: api.admin.v1.GetDesignateDictTypesRequest
	(*GetDesignateDictTypesReply)(nil),   // 12: api.admin.v1.GetDesignateDictTypesReply
	(*timestamppb.Timestamp)(nil),        // 13: google.protobuf.Timestamp
}
var file_dicttype_proto_depIdxs = []int32{
	13, // 0: api.admin.v1.UpdateDictTypeRequest.createTime:type_name -> google.protobuf.Timestamp
	13, // 1: api.admin.v1.UpdateDictTypeRequest.updateTime:type_name -> google.protobuf.Timestamp
	10, // 2: api.admin.v1.ListDictTypeReply.data:type_name -> api.admin.v1.DictTypeContent
	13, // 3: api.admin.v1.DictTypeContent.createTime:type_name -> google.protobuf.Timestamp
	13, // 4: api.admin.v1.DictTypeContent.updateTime:type_name -> google.protobuf.Timestamp
	8,  // 5: api.admin.v1.DictType.ListDictType:input_type -> api.admin.v1.ListDictTypeRequest
	0,  // 6: api.admin.v1.DictType.CreateDictType:input_type -> api.admin.v1.CreateDictTypeRequest
	2,  // 7: api.admin.v1.DictType.UpdateDictType:input_type -> api.admin.v1.UpdateDictTypeRequest
	4,  // 8: api.admin.v1.DictType.DeleteDictType:input_type -> api.admin.v1.DeleteDictTypeRequest
	6,  // 9: api.admin.v1.DictType.GetDictType:input_type -> api.admin.v1.GetDictTypeRequest
	9,  // 10: api.admin.v1.DictType.ListDictType:output_type -> api.admin.v1.ListDictTypeReply
	1,  // 11: api.admin.v1.DictType.CreateDictType:output_type -> api.admin.v1.CreateDictTypeReply
	3,  // 12: api.admin.v1.DictType.UpdateDictType:output_type -> api.admin.v1.UpdateDictTypeReply
	5,  // 13: api.admin.v1.DictType.DeleteDictType:output_type -> api.admin.v1.DeleteDictTypeReply
	7,  // 14: api.admin.v1.DictType.GetDictType:output_type -> api.admin.v1.GetDictTypeReply
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_dicttype_proto_init() }
func file_dicttype_proto_init() {
	if File_dicttype_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dicttype_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDictTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dicttype_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDictTypeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dicttype_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDictTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dicttype_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDictTypeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dicttype_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDictTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dicttype_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDictTypeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dicttype_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDictTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dicttype_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDictTypeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dicttype_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDictTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dicttype_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDictTypeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dicttype_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictTypeContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dicttype_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDesignateDictTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dicttype_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDesignateDictTypesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dicttype_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dicttype_proto_goTypes,
		DependencyIndexes: file_dicttype_proto_depIdxs,
		MessageInfos:      file_dicttype_proto_msgTypes,
	}.Build()
	File_dicttype_proto = out.File
	file_dicttype_proto_rawDesc = nil
	file_dicttype_proto_goTypes = nil
	file_dicttype_proto_depIdxs = nil
}
