// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: menus.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RoleMenuTreeSelectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId int64 `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
}

func (x *RoleMenuTreeSelectRequest) Reset() {
	*x = RoleMenuTreeSelectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menus_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleMenuTreeSelectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleMenuTreeSelectRequest) ProtoMessage() {}

func (x *RoleMenuTreeSelectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menus_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleMenuTreeSelectRequest.ProtoReflect.Descriptor instead.
func (*RoleMenuTreeSelectRequest) Descriptor() ([]byte, []int) {
	return file_menus_proto_rawDescGZIP(), []int{0}
}

func (x *RoleMenuTreeSelectRequest) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

type RoleMenuTreeSelectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckedKeys []int32      `protobuf:"varint,1,rep,packed,name=checkedKeys,proto3" json:"checkedKeys,omitempty"`
	Menus       []*MenuLabel `protobuf:"bytes,2,rep,name=menus,proto3" json:"menus,omitempty"`
}

func (x *RoleMenuTreeSelectReply) Reset() {
	*x = RoleMenuTreeSelectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menus_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleMenuTreeSelectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleMenuTreeSelectReply) ProtoMessage() {}

func (x *RoleMenuTreeSelectReply) ProtoReflect() protoreflect.Message {
	mi := &file_menus_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleMenuTreeSelectReply.ProtoReflect.Descriptor instead.
func (*RoleMenuTreeSelectReply) Descriptor() ([]byte, []int) {
	return file_menus_proto_rawDescGZIP(), []int{1}
}

func (x *RoleMenuTreeSelectReply) GetCheckedKeys() []int32 {
	if x != nil {
		return x.CheckedKeys
	}
	return nil
}

func (x *RoleMenuTreeSelectReply) GetMenus() []*MenuLabel {
	if x != nil {
		return x.Menus
	}
	return nil
}

type MenuLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuId   int32        `protobuf:"varint,1,opt,name=menuId,proto3" json:"menuId,omitempty"`
	MenuName string       `protobuf:"bytes,2,opt,name=menuName,proto3" json:"menuName,omitempty"`
	Children []*MenuLabel `protobuf:"bytes,3,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *MenuLabel) Reset() {
	*x = MenuLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menus_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuLabel) ProtoMessage() {}

func (x *MenuLabel) ProtoReflect() protoreflect.Message {
	mi := &file_menus_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuLabel.ProtoReflect.Descriptor instead.
func (*MenuLabel) Descriptor() ([]byte, []int) {
	return file_menus_proto_rawDescGZIP(), []int{2}
}

func (x *MenuLabel) GetMenuId() int32 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

func (x *MenuLabel) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *MenuLabel) GetChildren() []*MenuLabel {
	if x != nil {
		return x.Children
	}
	return nil
}

type CreateMenusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuName    string `protobuf:"bytes,2,opt,name=menuName,proto3" json:"menuName,omitempty"`
	Title       string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	ParentId    int32  `protobuf:"varint,4,opt,name=parentId,proto3" json:"parentId,omitempty"`
	Sort        int32  `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Icon        string `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	Path        string `protobuf:"bytes,7,opt,name=path,proto3" json:"path,omitempty"`
	Component   string `protobuf:"bytes,8,opt,name=component,proto3" json:"component,omitempty"`
	IsIframe    int32  `protobuf:"varint,9,opt,name=isIframe,proto3" json:"isIframe,omitempty"`
	IsLink      string `protobuf:"bytes,10,opt,name=isLink,proto3" json:"isLink,omitempty"`
	MenuType    string `protobuf:"bytes,11,opt,name=menuType,proto3" json:"menuType,omitempty"`
	IsHide      int64  `protobuf:"varint,12,opt,name=isHide,proto3" json:"isHide,omitempty"`
	IsKeepAlive int32  `protobuf:"varint,13,opt,name=isKeepAlive,proto3" json:"isKeepAlive,omitempty"`
	IsAffix     int32  `protobuf:"varint,14,opt,name=isAffix,proto3" json:"isAffix,omitempty"`
	Permission  string `protobuf:"bytes,15,opt,name=permission,proto3" json:"permission,omitempty"`
	Status      int32  `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`
	Remark      string `protobuf:"bytes,19,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *CreateMenusRequest) Reset() {
	*x = CreateMenusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menus_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMenusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMenusRequest) ProtoMessage() {}

func (x *CreateMenusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menus_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMenusRequest.ProtoReflect.Descriptor instead.
func (*CreateMenusRequest) Descriptor() ([]byte, []int) {
	return file_menus_proto_rawDescGZIP(), []int{3}
}

func (x *CreateMenusRequest) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *CreateMenusRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateMenusRequest) GetParentId() int32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *CreateMenusRequest) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *CreateMenusRequest) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *CreateMenusRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreateMenusRequest) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *CreateMenusRequest) GetIsIframe() int32 {
	if x != nil {
		return x.IsIframe
	}
	return 0
}

func (x *CreateMenusRequest) GetIsLink() string {
	if x != nil {
		return x.IsLink
	}
	return ""
}

func (x *CreateMenusRequest) GetMenuType() string {
	if x != nil {
		return x.MenuType
	}
	return ""
}

func (x *CreateMenusRequest) GetIsHide() int64 {
	if x != nil {
		return x.IsHide
	}
	return 0
}

func (x *CreateMenusRequest) GetIsKeepAlive() int32 {
	if x != nil {
		return x.IsKeepAlive
	}
	return 0
}

func (x *CreateMenusRequest) GetIsAffix() int32 {
	if x != nil {
		return x.IsAffix
	}
	return 0
}

func (x *CreateMenusRequest) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *CreateMenusRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateMenusRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type CreateMenusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Menus       []*MenuTree `protobuf:"bytes,1,rep,name=menus,proto3" json:"menus,omitempty"`
	Permissions []string    `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *CreateMenusReply) Reset() {
	*x = CreateMenusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menus_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMenusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMenusReply) ProtoMessage() {}

func (x *CreateMenusReply) ProtoReflect() protoreflect.Message {
	mi := &file_menus_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMenusReply.ProtoReflect.Descriptor instead.
func (*CreateMenusReply) Descriptor() ([]byte, []int) {
	return file_menus_proto_rawDescGZIP(), []int{4}
}

func (x *CreateMenusReply) GetMenus() []*MenuTree {
	if x != nil {
		return x.Menus
	}
	return nil
}

func (x *CreateMenusReply) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type UpdateMenusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuId      int64  `protobuf:"varint,1,opt,name=menuId,proto3" json:"menuId,omitempty"`
	MenuName    string `protobuf:"bytes,2,opt,name=menuName,proto3" json:"menuName,omitempty"`
	Title       string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	ParentId    int32  `protobuf:"varint,4,opt,name=parentId,proto3" json:"parentId,omitempty"`
	Sort        int32  `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Icon        string `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	Path        string `protobuf:"bytes,7,opt,name=path,proto3" json:"path,omitempty"`
	Component   string `protobuf:"bytes,8,opt,name=component,proto3" json:"component,omitempty"`
	IsIframe    int32  `protobuf:"varint,9,opt,name=isIframe,proto3" json:"isIframe,omitempty"`
	IsLink      string `protobuf:"bytes,10,opt,name=isLink,proto3" json:"isLink,omitempty"`
	MenuType    string `protobuf:"bytes,11,opt,name=menuType,proto3" json:"menuType,omitempty"`
	IsHide      int64  `protobuf:"varint,12,opt,name=isHide,proto3" json:"isHide,omitempty"`
	IsKeepAlive int32  `protobuf:"varint,13,opt,name=isKeepAlive,proto3" json:"isKeepAlive,omitempty"`
	IsAffix     int32  `protobuf:"varint,14,opt,name=isAffix,proto3" json:"isAffix,omitempty"`
	Permission  string `protobuf:"bytes,15,opt,name=permission,proto3" json:"permission,omitempty"`
	Status      int32  `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`
	Remark      string `protobuf:"bytes,19,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *UpdateMenusRequest) Reset() {
	*x = UpdateMenusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menus_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMenusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMenusRequest) ProtoMessage() {}

func (x *UpdateMenusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menus_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMenusRequest.ProtoReflect.Descriptor instead.
func (*UpdateMenusRequest) Descriptor() ([]byte, []int) {
	return file_menus_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateMenusRequest) GetMenuId() int64 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

func (x *UpdateMenusRequest) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *UpdateMenusRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateMenusRequest) GetParentId() int32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *UpdateMenusRequest) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *UpdateMenusRequest) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *UpdateMenusRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *UpdateMenusRequest) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *UpdateMenusRequest) GetIsIframe() int32 {
	if x != nil {
		return x.IsIframe
	}
	return 0
}

func (x *UpdateMenusRequest) GetIsLink() string {
	if x != nil {
		return x.IsLink
	}
	return ""
}

func (x *UpdateMenusRequest) GetMenuType() string {
	if x != nil {
		return x.MenuType
	}
	return ""
}

func (x *UpdateMenusRequest) GetIsHide() int64 {
	if x != nil {
		return x.IsHide
	}
	return 0
}

func (x *UpdateMenusRequest) GetIsKeepAlive() int32 {
	if x != nil {
		return x.IsKeepAlive
	}
	return 0
}

func (x *UpdateMenusRequest) GetIsAffix() int32 {
	if x != nil {
		return x.IsAffix
	}
	return 0
}

func (x *UpdateMenusRequest) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *UpdateMenusRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateMenusRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type UpdateMenusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Menus       []*MenuTree `protobuf:"bytes,1,rep,name=menus,proto3" json:"menus,omitempty"`
	Permissions []string    `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *UpdateMenusReply) Reset() {
	*x = UpdateMenusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menus_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMenusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMenusReply) ProtoMessage() {}

func (x *UpdateMenusReply) ProtoReflect() protoreflect.Message {
	mi := &file_menus_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMenusReply.ProtoReflect.Descriptor instead.
func (*UpdateMenusReply) Descriptor() ([]byte, []int) {
	return file_menus_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateMenusReply) GetMenus() []*MenuTree {
	if x != nil {
		return x.Menus
	}
	return nil
}

func (x *UpdateMenusReply) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type DeleteMenusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteMenusRequest) Reset() {
	*x = DeleteMenusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menus_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMenusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMenusRequest) ProtoMessage() {}

func (x *DeleteMenusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menus_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMenusRequest.ProtoReflect.Descriptor instead.
func (*DeleteMenusRequest) Descriptor() ([]byte, []int) {
	return file_menus_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteMenusRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteMenusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteMenusReply) Reset() {
	*x = DeleteMenusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menus_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMenusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMenusReply) ProtoMessage() {}

func (x *DeleteMenusReply) ProtoReflect() protoreflect.Message {
	mi := &file_menus_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMenusReply.ProtoReflect.Descriptor instead.
func (*DeleteMenusReply) Descriptor() ([]byte, []int) {
	return file_menus_proto_rawDescGZIP(), []int{8}
}

type GetMenusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetMenusRequest) Reset() {
	*x = GetMenusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menus_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMenusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMenusRequest) ProtoMessage() {}

func (x *GetMenusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menus_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMenusRequest.ProtoReflect.Descriptor instead.
func (*GetMenusRequest) Descriptor() ([]byte, []int) {
	return file_menus_proto_rawDescGZIP(), []int{9}
}

func (x *GetMenusRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetMenusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuId      int32                  `protobuf:"varint,1,opt,name=menuId,proto3" json:"menuId,omitempty"`
	MenuName    string                 `protobuf:"bytes,2,opt,name=menuName,proto3" json:"menuName,omitempty"`
	Title       string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	ParentId    int32                  `protobuf:"varint,4,opt,name=parentId,proto3" json:"parentId,omitempty"`
	Sort        int32                  `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Icon        string                 `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	Path        string                 `protobuf:"bytes,7,opt,name=path,proto3" json:"path,omitempty"`
	Component   string                 `protobuf:"bytes,8,opt,name=component,proto3" json:"component,omitempty"`
	IsIframe    int32                  `protobuf:"varint,9,opt,name=isIframe,proto3" json:"isIframe,omitempty"`
	IsLink      string                 `protobuf:"bytes,10,opt,name=isLink,proto3" json:"isLink,omitempty"`
	MenuType    string                 `protobuf:"bytes,11,opt,name=menuType,proto3" json:"menuType,omitempty"`
	IsHide      int64                  `protobuf:"varint,12,opt,name=isHide,proto3" json:"isHide,omitempty"`
	IsKeepAlive int32                  `protobuf:"varint,13,opt,name=isKeepAlive,proto3" json:"isKeepAlive,omitempty"`
	IsAffix     int32                  `protobuf:"varint,14,opt,name=isAffix,proto3" json:"isAffix,omitempty"`
	Permission  string                 `protobuf:"bytes,15,opt,name=permission,proto3" json:"permission,omitempty"`
	Status      int32                  `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`
	CreateBy    string                 `protobuf:"bytes,17,opt,name=createBy,proto3" json:"createBy,omitempty"`
	UpdateBy    string                 `protobuf:"bytes,18,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	Remark      string                 `protobuf:"bytes,19,opt,name=remark,proto3" json:"remark,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,22,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *GetMenusReply) Reset() {
	*x = GetMenusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menus_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMenusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMenusReply) ProtoMessage() {}

func (x *GetMenusReply) ProtoReflect() protoreflect.Message {
	mi := &file_menus_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMenusReply.ProtoReflect.Descriptor instead.
func (*GetMenusReply) Descriptor() ([]byte, []int) {
	return file_menus_proto_rawDescGZIP(), []int{10}
}

func (x *GetMenusReply) GetMenuId() int32 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

func (x *GetMenusReply) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *GetMenusReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetMenusReply) GetParentId() int32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *GetMenusReply) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *GetMenusReply) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *GetMenusReply) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetMenusReply) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *GetMenusReply) GetIsIframe() int32 {
	if x != nil {
		return x.IsIframe
	}
	return 0
}

func (x *GetMenusReply) GetIsLink() string {
	if x != nil {
		return x.IsLink
	}
	return ""
}

func (x *GetMenusReply) GetMenuType() string {
	if x != nil {
		return x.MenuType
	}
	return ""
}

func (x *GetMenusReply) GetIsHide() int64 {
	if x != nil {
		return x.IsHide
	}
	return 0
}

func (x *GetMenusReply) GetIsKeepAlive() int32 {
	if x != nil {
		return x.IsKeepAlive
	}
	return 0
}

func (x *GetMenusReply) GetIsAffix() int32 {
	if x != nil {
		return x.IsAffix
	}
	return 0
}

func (x *GetMenusReply) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *GetMenusReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetMenusReply) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *GetMenusReply) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *GetMenusReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *GetMenusReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetMenusReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ListMenusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuName string `protobuf:"bytes,1,opt,name=menuName,proto3" json:"menuName,omitempty"`
	Status   int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ListMenusRequest) Reset() {
	*x = ListMenusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menus_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMenusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMenusRequest) ProtoMessage() {}

func (x *ListMenusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menus_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMenusRequest.ProtoReflect.Descriptor instead.
func (*ListMenusRequest) Descriptor() ([]byte, []int) {
	return file_menus_proto_rawDescGZIP(), []int{11}
}

func (x *ListMenusRequest) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *ListMenusRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ListMenusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*MenuTree `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListMenusReply) Reset() {
	*x = ListMenusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menus_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMenusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMenusReply) ProtoMessage() {}

func (x *ListMenusReply) ProtoReflect() protoreflect.Message {
	mi := &file_menus_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMenusReply.ProtoReflect.Descriptor instead.
func (*ListMenusReply) Descriptor() ([]byte, []int) {
	return file_menus_proto_rawDescGZIP(), []int{12}
}

func (x *ListMenusReply) GetList() []*MenuTree {
	if x != nil {
		return x.List
	}
	return nil
}

type GetMenusTreeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMenusTreeRequest) Reset() {
	*x = GetMenusTreeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menus_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMenusTreeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMenusTreeRequest) ProtoMessage() {}

func (x *GetMenusTreeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menus_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMenusTreeRequest.ProtoReflect.Descriptor instead.
func (*GetMenusTreeRequest) Descriptor() ([]byte, []int) {
	return file_menus_proto_rawDescGZIP(), []int{13}
}

type GetMenusTreeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SimpleMenu `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetMenusTreeReply) Reset() {
	*x = GetMenusTreeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menus_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMenusTreeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMenusTreeReply) ProtoMessage() {}

func (x *GetMenusTreeReply) ProtoReflect() protoreflect.Message {
	mi := &file_menus_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMenusTreeReply.ProtoReflect.Descriptor instead.
func (*GetMenusTreeReply) Descriptor() ([]byte, []int) {
	return file_menus_proto_rawDescGZIP(), []int{14}
}

func (x *GetMenusTreeReply) GetList() []*SimpleMenu {
	if x != nil {
		return x.List
	}
	return nil
}

var File_menus_proto protoreflect.FileDescriptor

var file_menus_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61,
	0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x33, 0x0a, 0x19, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65,
	0x6e, 0x75, 0x54, 0x72, 0x65, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x17, 0x52,
	0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x54, 0x72, 0x65, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x64, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x2d, 0x0a, 0x05, 0x6d, 0x65, 0x6e, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x52, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x22, 0x74, 0x0a, 0x09, 0x4d, 0x65, 0x6e, 0x75, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x72, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0xb0, 0x03,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x73, 0x49, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x69, 0x73, 0x49, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x4c, 0x69,
	0x6e, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x69, 0x6e, 0x6b,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x73, 0x48, 0x69, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x73,
	0x48, 0x69, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c,
	0x69, 0x76, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x73, 0x4b, 0x65, 0x65,
	0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x41, 0x66, 0x66, 0x69,
	0x78, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x41, 0x66, 0x66, 0x69, 0x78,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x22, 0x62, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x54, 0x72, 0x65, 0x65, 0x52, 0x05, 0x6d, 0x65, 0x6e,
	0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0xc8, 0x03, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x65, 0x6e, 0x75, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6e,
	0x75, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x73, 0x49, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69,
	0x73, 0x49, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x4c, 0x69, 0x6e,
	0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x73, 0x48, 0x69, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x73, 0x48,
	0x69, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69,
	0x76, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x73, 0x4b, 0x65, 0x65, 0x70,
	0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x41, 0x66, 0x66, 0x69, 0x78,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x41, 0x66, 0x66, 0x69, 0x78, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22,
	0x62, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x54, 0x72, 0x65, 0x65, 0x52, 0x05, 0x6d, 0x65, 0x6e, 0x75,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x24, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x12, 0x0a, 0x10, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xef, 0x04, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65,
	0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65,
	0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x49, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x49, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x48, 0x69, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x69, 0x73, 0x48, 0x69, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73,
	0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x69, 0x73, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x69, 0x73, 0x41, 0x66, 0x66, 0x69, 0x78, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69,
	0x73, 0x41, 0x66, 0x66, 0x69, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x38,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x46, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3c, 0x0a, 0x0e, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2a, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x54, 0x72,
	0x65, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x6e, 0x75, 0x73, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x41, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x54, 0x72, 0x65, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x32, 0xa2, 0x06, 0x0a, 0x05, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x12, 0x68, 0x0a, 0x0b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x12, 0x20, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x17, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22, 0x0c, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x6d,
	0x65, 0x6e, 0x75, 0x3a, 0x01, 0x2a, 0x12, 0x64, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65,
	0x6e, 0x75, 0x73, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2f, 0x6d, 0x65, 0x6e, 0x75, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x77, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x54, 0x72, 0x65, 0x65, 0x12, 0x21, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x6e, 0x75, 0x73, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2f, 0x6d, 0x65, 0x6e, 0x75, 0x2f, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x72, 0x65, 0x65, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x68, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x6e, 0x75, 0x73, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x1a, 0x0c,
	0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x6d, 0x65, 0x6e, 0x75, 0x3a, 0x01, 0x2a, 0x12,
	0x6a, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x12, 0x20,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x2a, 0x11, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2f, 0x6d, 0x65, 0x6e, 0x75, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x61, 0x0a, 0x08, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2f, 0x6d, 0x65, 0x6e, 0x75, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x96,
	0x01, 0x0a, 0x12, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x54, 0x72, 0x65, 0x65, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x54, 0x72, 0x65,
	0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x54, 0x72, 0x65, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x6d, 0x65, 0x6e, 0x75, 0x2f, 0x72, 0x6f, 0x6c, 0x65,
	0x4d, 0x65, 0x6e, 0x75, 0x54, 0x72, 0x65, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x2f, 0x7b,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x7d, 0x42, 0x19, 0x5a, 0x17, 0x66, 0x65, 0x6e, 0x67, 0x79,
	0x69, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x3b,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_menus_proto_rawDescOnce sync.Once
	file_menus_proto_rawDescData = file_menus_proto_rawDesc
)

func file_menus_proto_rawDescGZIP() []byte {
	file_menus_proto_rawDescOnce.Do(func() {
		file_menus_proto_rawDescData = protoimpl.X.CompressGZIP(file_menus_proto_rawDescData)
	})
	return file_menus_proto_rawDescData
}

var file_menus_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_menus_proto_goTypes = []interface{}{
	(*RoleMenuTreeSelectRequest)(nil), // 0: api.admin.v1.RoleMenuTreeSelectRequest
	(*RoleMenuTreeSelectReply)(nil),   // 1: api.admin.v1.RoleMenuTreeSelectReply
	(*MenuLabel)(nil),                 // 2: api.admin.v1.MenuLabel
	(*CreateMenusRequest)(nil),        // 3: api.admin.v1.CreateMenusRequest
	(*CreateMenusReply)(nil),          // 4: api.admin.v1.CreateMenusReply
	(*UpdateMenusRequest)(nil),        // 5: api.admin.v1.UpdateMenusRequest
	(*UpdateMenusReply)(nil),          // 6: api.admin.v1.UpdateMenusReply
	(*DeleteMenusRequest)(nil),        // 7: api.admin.v1.DeleteMenusRequest
	(*DeleteMenusReply)(nil),          // 8: api.admin.v1.DeleteMenusReply
	(*GetMenusRequest)(nil),           // 9: api.admin.v1.GetMenusRequest
	(*GetMenusReply)(nil),             // 10: api.admin.v1.GetMenusReply
	(*ListMenusRequest)(nil),          // 11: api.admin.v1.ListMenusRequest
	(*ListMenusReply)(nil),            // 12: api.admin.v1.ListMenusReply
	(*GetMenusTreeRequest)(nil),       // 13: api.admin.v1.GetMenusTreeRequest
	(*GetMenusTreeReply)(nil),         // 14: api.admin.v1.GetMenusTreeReply
	(*MenuTree)(nil),                  // 15: api.admin.v1.MenuTree
	(*timestamppb.Timestamp)(nil),     // 16: google.protobuf.Timestamp
	(*SimpleMenu)(nil),                // 17: api.admin.v1.SimpleMenu
}
var file_menus_proto_depIdxs = []int32{
	2,  // 0: api.admin.v1.RoleMenuTreeSelectReply.menus:type_name -> api.admin.v1.MenuLabel
	2,  // 1: api.admin.v1.MenuLabel.children:type_name -> api.admin.v1.MenuLabel
	15, // 2: api.admin.v1.CreateMenusReply.menus:type_name -> api.admin.v1.MenuTree
	15, // 3: api.admin.v1.UpdateMenusReply.menus:type_name -> api.admin.v1.MenuTree
	16, // 4: api.admin.v1.GetMenusReply.createdAt:type_name -> google.protobuf.Timestamp
	16, // 5: api.admin.v1.GetMenusReply.updatedAt:type_name -> google.protobuf.Timestamp
	15, // 6: api.admin.v1.ListMenusReply.list:type_name -> api.admin.v1.MenuTree
	17, // 7: api.admin.v1.GetMenusTreeReply.list:type_name -> api.admin.v1.SimpleMenu
	3,  // 8: api.admin.v1.Menus.CreateMenus:input_type -> api.admin.v1.CreateMenusRequest
	11, // 9: api.admin.v1.Menus.ListMenus:input_type -> api.admin.v1.ListMenusRequest
	13, // 10: api.admin.v1.Menus.GetMenusTree:input_type -> api.admin.v1.GetMenusTreeRequest
	5,  // 11: api.admin.v1.Menus.UpdateMenus:input_type -> api.admin.v1.UpdateMenusRequest
	7,  // 12: api.admin.v1.Menus.DeleteMenus:input_type -> api.admin.v1.DeleteMenusRequest
	9,  // 13: api.admin.v1.Menus.GetMenus:input_type -> api.admin.v1.GetMenusRequest
	0,  // 14: api.admin.v1.Menus.RoleMenuTreeSelect:input_type -> api.admin.v1.RoleMenuTreeSelectRequest
	4,  // 15: api.admin.v1.Menus.CreateMenus:output_type -> api.admin.v1.CreateMenusReply
	12, // 16: api.admin.v1.Menus.ListMenus:output_type -> api.admin.v1.ListMenusReply
	14, // 17: api.admin.v1.Menus.GetMenusTree:output_type -> api.admin.v1.GetMenusTreeReply
	6,  // 18: api.admin.v1.Menus.UpdateMenus:output_type -> api.admin.v1.UpdateMenusReply
	8,  // 19: api.admin.v1.Menus.DeleteMenus:output_type -> api.admin.v1.DeleteMenusReply
	10, // 20: api.admin.v1.Menus.GetMenus:output_type -> api.admin.v1.GetMenusReply
	1,  // 21: api.admin.v1.Menus.RoleMenuTreeSelect:output_type -> api.admin.v1.RoleMenuTreeSelectReply
	15, // [15:22] is the sub-list for method output_type
	8,  // [8:15] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_menus_proto_init() }
func file_menus_proto_init() {
	if File_menus_proto != nil {
		return
	}
	file_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_menus_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleMenuTreeSelectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menus_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleMenuTreeSelectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menus_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menus_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMenusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menus_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMenusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menus_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMenusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menus_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMenusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menus_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMenusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menus_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMenusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menus_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMenusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menus_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMenusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menus_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMenusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menus_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMenusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menus_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMenusTreeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menus_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMenusTreeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_menus_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_menus_proto_goTypes,
		DependencyIndexes: file_menus_proto_depIdxs,
		MessageInfos:      file_menus_proto_msgTypes,
	}.Build()
	File_menus_proto = out.File
	file_menus_proto_rawDesc = nil
	file_menus_proto_goTypes = nil
	file_menus_proto_depIdxs = nil
}
